@model List<Product>

<h2>Каталог</h2>

<<button id="sortButton" class="btn btn-primary mb-3">Сортировать по цене (по убыванию)</button>

<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3" id="productsContainer">
    @foreach (var product in Model)
    {
        <div class="col">
            <div class="card shadow-sm">
                <img src="@product.PathPicture">

                <div class="card-body">
                    <h4>@product.Name</h4>
                    <p>@product.Id</p>
                    <p class="card-text">@product.Description</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            <a class="btn btn-primary"
                           asp-area=""
                           asp-controller="Product"
                           asp-action="Index"
                           asp-route-id="@product.Id"
                               role="button">Подробнее</a>
                            <a class="btn btn-primary"
                           asp-area=""
                           asp-controller="Cart"
                           asp-action="Add"
                           asp-route-id="@product.Id"
                               role="button">В корзину</a>

                        </div>
                        <small class="text-muted">@product.Cost р.</small>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    <script>
        document.getElementById('sortButton').addEventListener('click', function () {
            const container = document.getElementById('productsContainer');
            const productCards = Array.from(container.getElementsByClassName('col'));


            productCards.sort((a, b) => {
                const priceA = parseFloat(a.querySelector('.text-muted').textContent.replace(' р.', '').trim());
                const priceB = parseFloat(b.querySelector('.text-muted').textContent.replace(' р.', '').trim());
                return priceA - priceB;
            });


            container.innerHTML = '';
            productCards.forEach(card => container.appendChild(card));
        });
    </script>
}